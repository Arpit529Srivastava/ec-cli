name: ec validate pipeline
synopsis: Validate Pipeline conformance with the Enterprise Contract
description: |-
    Validate Pipeline conformance with the Enterprise Contract

    Validate Tekton Pipeline definition files conforms to the rego policies
    defined in the given policy repository.
usage: ec validate pipeline [flags]
options:
    - name: branch
      default_value: main
      usage: policy repo branch
    - name: help
      shorthand: h
      default_value: "false"
      usage: help for pipeline
    - name: namespace
      default_value: pipeline.main
      usage: rego namespace within policy repo
    - name: pipeline-file
      shorthand: p
      default_value: '[]'
      usage: path to pipeline definition YAML/JSON file (required)
    - name: policy-dir
      default_value: policy
      usage: directory within policy repo containing policies
    - name: policy-repo
      default_value: https://github.com/hacbs-contract/ec-policies.git
      usage: git repo containing policies
inherited_options:
    - name: debug
      default_value: "false"
      usage: |
        same as verbose but also show function names and line numbers
    - name: quiet
      default_value: "false"
      usage: less verbose output
    - name: verbose
      default_value: "false"
      usage: more verbose output
example: |-
    Validate multiple Pipeline definition files via comma-separated value:

      ec validate pipeline --pipeline-file </path/to/pipeline/file>,</path/to/other/pipeline/file>

    Validate multiple Pipeline definition files by repeating --pipeline-file:

      ec validate pipeline --pipeline-file </path/to/pipeline/file> --pipeline-file /path/to/other-pipeline.file

    Sepcify a different location for the policies:

      ec validate pipeline --pipeline-file </path/to/pipeline/file> \
        --policy-repo https://example.com/user/repo.git --branch foo --namespace pipeline.basic
see_also:
    - ec validate - Validate conformance with the Enterprise Contract
